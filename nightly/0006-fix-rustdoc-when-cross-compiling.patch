From adaf83bd446a0b55613fc564edd78be9a55a82ef Mon Sep 17 00:00:00 2001
From: q66 <q66@chimera-linux.org>
Date: Mon, 9 Sep 2024 17:54:43 +0200
Subject: [PATCH 06/17] fix rustdoc when cross-compiling

---
 src/bootstrap/src/bin/rustdoc.rs | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

diff --git a/src/bootstrap/src/bin/rustdoc.rs b/src/bootstrap/src/bin/rustdoc.rs
index a338b9c80..9ee8312b3 100644
--- a/src/bootstrap/src/bin/rustdoc.rs
+++ b/src/bootstrap/src/bin/rustdoc.rs
@@ -7,7 +7,7 @@ use std::path::PathBuf;
 use std::process::Command;
 
 use shared_helpers::{
-    dylib_path, dylib_path_var, maybe_dump, parse_rustc_stage, parse_rustc_verbose,
+    dylib_path_var, maybe_dump, parse_rustc_stage, parse_rustc_verbose,
     parse_value_from_args,
 };
 
@@ -28,9 +28,6 @@ fn main() {
     // is passed (a bit janky...)
     let target = parse_value_from_args(&args, "--target");
 
-    let mut dylib_path = dylib_path();
-    dylib_path.insert(0, PathBuf::from(libdir.clone()));
-
     let mut cmd = Command::new(rustdoc);
 
     if target.is_some() {
@@ -43,7 +40,7 @@ fn main() {
     }
 
     cmd.args(&args);
-    cmd.env(dylib_path_var(), env::join_paths(&dylib_path).unwrap());
+    cmd.env(dylib_path_var(), PathBuf::from(libdir.clone()));
 
     // Force all crates compiled by this compiler to (a) be unstable and (b)
     // allow the `rustc_private` feature to link to other unstable crates
@@ -66,7 +63,7 @@ fn main() {
         eprintln!(
             "rustdoc command: {:?}={:?} {:?}",
             dylib_path_var(),
-            env::join_paths(&dylib_path).unwrap(),
+            PathBuf::from(libdir.clone()),
             cmd,
         );
         eprintln!("sysroot: {sysroot:?}");
-- 
2.49.0

